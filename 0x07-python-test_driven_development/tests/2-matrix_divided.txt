Module `divide `Matrix``
========================

test ``matrix_divided`` class
------------------------

We have to first import ``matrix_divided`` from ``2-matrix_divided`` module
	>>> mat = __import__('2-matrix_divided').matrix_divided

After that we can testt it

	>>> mat(12, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> mat([[1, 2, 3], [1, 2]], 2)
        Traceback (most recent call last):
        ...
        TypeError: Each row of the matrix must have the same size

	>>> mat([[4, 5, 7]], 2)
        [[2.0, 2.5, 3.5]]

	>>> mat([[1, 2, 3], [4, 5, 6]], 3)
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> mat([[1, 2, 3], [1, 2, 6]], "a")
        Traceback (most recent call last):
        ...
        TypeError: div must be a number


	 >>> mat([[1, 2, 3], [1, "hello", 2]], 2)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> mat([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	>>> mat([[10, 2, 32], [14, 5, 26]])
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> mat([[1, 2, 3], [1, 2, 6]], None)
        Traceback (most recent call last):
        ...
        TypeError: div must be a number
